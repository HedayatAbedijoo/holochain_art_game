{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2","program":"/home/hedayat/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","slab","/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=21e9be505c16889c","-C","extra-filename=-21e9be505c16889c","--out-dir","/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps","-L","dependency=/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hedayat/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps/libslab-21e9be505c16889c.rmeta"},"prelude":{"crate_id":{"name":"slab","disambiguator":[16702033423796828327,15062410901164475452]},"crate_root":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src","external_crates":[{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[209835277530881657,15808503733927382107]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16029480004387217627,6286701584104388484]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11090620017897417446,12697652474452346877]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266695456344252550,6880608577203890473]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[891772713935988946,4065685175361189969]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8746283424692937858,2818242532065180231]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4536512594218270843,7173380446293199441]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15719965530685779716,707774774224757388]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1848642013280761028,5321209516682386969]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15341350632097049551,10795069077588447444]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[6131951739161126534,12836766564382686052]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4055154462036822968,992105156702146647]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4418916403738006939,11520932697003723527]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[18166257815422958374,1563515351942068747]}}],"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":0,"byte_end":26640,"line_start":1,"line_end":977,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":0,"byte_end":26640,"line_start":1,"line_end":977,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":107},{"krate":0,"index":112},{"krate":0,"index":9},{"krate":0,"index":115},{"krate":0,"index":120},{"krate":0,"index":12},{"krate":0,"index":17},{"krate":0,"index":22},{"krate":0,"index":124},{"krate":0,"index":132},{"krate":0,"index":27},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":66},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":92},{"krate":0,"index":97},{"krate":0,"index":102}],"decl_id":null,"docs":" Pre-allocated storage for a uniform data type.","sig":null,"attributes":[{"value":"deny(warnings, missing_docs, missing_debug_implementations)","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":54,"byte_end":117,"line_start":2,"line_end":2,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4012,"byte_end":4016,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"Slab","qualname":"::Slab","value":"Slab {  }","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"decl_id":null,"docs":" Pre-allocated storage for a uniform data type","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":115},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4859,"byte_end":4870,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"decl_id":null,"docs":" A handle to a vacant entry in a `Slab`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4994,"byte_end":4998,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" An iterator over the values stored in the `Slab`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5148,"byte_end":5155,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" A mutable iterator over the values stored in the `Slab`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5283,"byte_end":5288,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"","parent":null,"children":[],"decl_id":null,"docs":" A draining iterator for `Slab`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5753,"byte_end":5756,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<Slab<T>>::new","value":"fn () -> Slab<T>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new, empty `Slab`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":6796,"byte_end":6809,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Slab<T>>::with_capacity","value":"fn (capacity: usize) -> Slab<T>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new, empty `Slab` with the specified capacity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":7230,"byte_end":7238,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Slab<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of values the slab can store without reallocating.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":8284,"byte_end":8291,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Slab<T>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for at least `additional` more values to be stored\n without allocating.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":9522,"byte_end":9535,"line_start":307,"line_end":307,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<Slab<T>>::reserve_exact","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve the minimum capacity required to store exactly `additional`\n more values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":10892,"byte_end":10905,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<Slab<T>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the slab as much as possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":11265,"byte_end":11270,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"clear","qualname":"<Slab<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the slab of all values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":11652,"byte_end":11655,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"len","qualname":"<Slab<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of stored values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":11993,"byte_end":12001,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Slab<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if there are no values stored in the slab.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":12836,"byte_end":12840,"line_start":438,"line_end":438,"column_start":12,"column_end":16},"name":"iter","qualname":"<Slab<T>>::iter","value":"fn (&self) -> Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the slab.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":13726,"byte_end":13734,"line_start":470,"line_end":470,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Slab<T>>::iter_mut","value":"fn (&mut self) -> IterMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that allows modifying each value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":14302,"byte_end":14305,"line_start":492,"line_end":492,"column_start":12,"column_end":15},"name":"get","qualname":"<Slab<T>>::get","value":"fn (&self, key: usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value associated with the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":14971,"byte_end":14978,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Slab<T>>::get_mut","value":"fn (&mut self, key: usize) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value associated with the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":15598,"byte_end":15611,"line_start":539,"line_end":539,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Slab<T>>::get_unchecked","value":"fn (&self, key: usize) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value associated with the given key without\n performing bounds checking.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":16283,"byte_end":16300,"line_start":565,"line_end":565,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Slab<T>>::get_unchecked_mut","value":"fn (&mut self, key: usize) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value associated with the given key\n without performing bounds checking.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":17128,"byte_end":17134,"line_start":590,"line_end":590,"column_start":12,"column_end":18},"name":"insert","qualname":"<Slab<T>>::insert","value":"fn (&mut self, val: T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Insert a value in the slab, returning key assigned to the value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":17943,"byte_end":17955,"line_start":621,"line_end":621,"column_start":12,"column_end":24},"name":"vacant_entry","qualname":"<Slab<T>>::vacant_entry","value":"fn (&mut self) -> VacantEntry<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to a vacant entry allowing for further manipulation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":19098,"byte_end":19104,"line_start":666,"line_end":666,"column_start":12,"column_end":18},"name":"remove","qualname":"<Slab<T>>::remove","value":"fn (&mut self, key: usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the value associated with the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":19998,"byte_end":20006,"line_start":699,"line_end":699,"column_start":12,"column_end":20},"name":"contains","qualname":"<Slab<T>>::contains","value":"fn (&self, key: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a value is associated with the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":20961,"byte_end":20967,"line_start":733,"line_end":733,"column_start":12,"column_end":18},"name":"retain","qualname":"<Slab<T>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retain only the elements specified by the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22095,"byte_end":22100,"line_start":776,"line_end":776,"column_start":12,"column_end":17},"name":"drain","qualname":"<Slab<T>>::drain","value":"fn (&mut self) -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a draining iterator that removes all elements from the slab and\n yields the removed items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":24719,"byte_end":24725,"line_start":890,"line_end":890,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, val: T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Insert a value in the entry, returning a mutable reference to the value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25479,"byte_end":25482,"line_start":920,"line_end":920,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the key associated with this entry.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4297,"byte_end":4301,"line_start":128,"line_end":128,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5408,"byte_end":5412,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22248,"byte_end":22252,"line_start":783,"line_end":783,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22487,"byte_end":22491,"line_start":794,"line_end":794,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23084,"byte_end":23088,"line_start":821,"line_end":821,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23356,"byte_end":23360,"line_start":835,"line_end":835,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23643,"byte_end":23650,"line_start":847,"line_end":847,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23936,"byte_end":23941,"line_start":859,"line_end":859,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":24104,"byte_end":24115,"line_start":867,"line_end":867,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25573,"byte_end":25577,"line_start":927,"line_end":927,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25977,"byte_end":25984,"line_start":946,"line_end":946,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":26394,"byte_end":26399,"line_start":965,"line_end":965,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4297,"byte_end":4301,"line_start":128,"line_end":128,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5408,"byte_end":5412,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22248,"byte_end":22252,"line_start":783,"line_end":783,"column_start":31,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":1779}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22487,"byte_end":22491,"line_start":794,"line_end":794,"column_start":34,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23084,"byte_end":23088,"line_start":821,"line_end":821,"column_start":24,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23356,"byte_end":23360,"line_start":835,"line_end":835,"column_start":32,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23643,"byte_end":23650,"line_start":847,"line_end":847,"column_start":32,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":17},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23936,"byte_end":23941,"line_start":859,"line_end":859,"column_start":32,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":24104,"byte_end":24115,"line_start":867,"line_end":867,"column_start":13,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25573,"byte_end":25577,"line_start":927,"line_end":927,"column_start":26,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25977,"byte_end":25984,"line_start":946,"line_end":946,"column_start":26,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":17},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":26394,"byte_end":26399,"line_start":965,"line_end":965,"column_start":26,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":22},"to":{"krate":2,"index":3585}}]}