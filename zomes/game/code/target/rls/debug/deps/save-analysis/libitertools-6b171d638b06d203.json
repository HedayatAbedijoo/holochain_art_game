{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11","program":"/home/hedayat/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","itertools","/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","-C","metadata=6b171d638b06d203","-C","extra-filename=-6b171d638b06d203","--out-dir","/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps","-L","dependency=/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps","--extern","either=/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps/libeither-21847c1ab30128ad.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/hedayat/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps/libitertools-6b171d638b06d203.rmeta"},"prelude":{"crate_id":{"name":"itertools","disambiguator":[3156797110878477083,8201311070891036755]},"crate_root":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src","external_crates":[{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[209835277530881657,15808503733927382107]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16029480004387217627,6286701584104388484]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11090620017897417446,12697652474452346877]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266695456344252550,6880608577203890473]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[891772713935988946,4065685175361189969]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8746283424692937858,2818242532065180231]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4536512594218270843,7173380446293199441]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15719965530685779716,707774774224757388]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1848642013280761028,5321209516682386969]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15341350632097049551,10795069077588447444]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[6131951739161126534,12836766564382686052]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4055154462036822968,992105156702146647]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4418916403738006939,11520932697003723527]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[18166257815422958374,1563515351942068747]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","num":15,"id":{"name":"either","disambiguator":[1728704681907874812,7403565081119100669]}}],"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":0,"byte_end":70486,"line_start":1,"line_end":2121,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":161},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":825,"byte_end":831,"line_start":32,"line_end":32,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":3274},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1164,"byte_end":1168,"line_start":49,"line_end":49,"column_start":14,"column_end":18},"alias_span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1172,"byte_end":1182,"line_start":49,"line_end":49,"column_start":22,"column_end":32},"name":"__std_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1268,"byte_end":1273,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"alias_span":null,"name":"Dedup","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1436},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1283,"byte_end":1293,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1450},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1303,"byte_end":1321,"line_start":56,"line_end":56,"column_start":9,"column_end":27},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1474},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1331,"byte_end":1338,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1348,"byte_end":1355,"line_start":58,"line_end":58,"column_start":9,"column_end":16},"alias_span":null,"name":"PutBack","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1489},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1365,"byte_end":1373,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"alias_span":null,"name":"Batching","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1499},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1383,"byte_end":1387,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"alias_span":null,"name":"Step","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":381},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1397,"byte_end":1407,"line_start":61,"line_end":61,"column_start":9,"column_end":19},"alias_span":null,"name":"MapResults","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1417,"byte_end":1422,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1432,"byte_end":1439,"line_start":63,"line_end":63,"column_start":9,"column_end":16},"alias_span":null,"name":"MergeBy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1449,"byte_end":1461,"line_start":64,"line_end":64,"column_start":9,"column_end":21},"alias_span":null,"name":"TakeWhileRef","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1524},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1471,"byte_end":1480,"line_start":65,"line_end":65,"column_start":9,"column_end":18},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1490,"byte_end":1498,"line_start":66,"line_end":66,"column_start":9,"column_end":17},"alias_span":null,"name":"Coalesce","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1533},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1508,"byte_end":1525,"line_start":67,"line_end":67,"column_start":9,"column_end":26},"alias_span":null,"name":"TupleCombinations","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1624},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1535,"byte_end":1542,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":409},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1552,"byte_end":1561,"line_start":69,"line_end":69,"column_start":9,"column_end":18},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1571,"byte_end":1577,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1411},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1640,"byte_end":1652,"line_start":73,"line_end":73,"column_start":23,"column_end":35},"alias_span":null,"name":"MultiProduct","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":535},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1712,"byte_end":1724,"line_start":75,"line_end":75,"column_start":27,"column_end":39},"alias_span":null,"name":"Combinations","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1823},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1756,"byte_end":1766,"line_start":76,"line_end":76,"column_start":31,"column_end":41},"alias_span":null,"name":"ConsTuples","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1840},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1789,"byte_end":1795,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":587},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1797,"byte_end":1807,"line_start":77,"line_end":77,"column_start":30,"column_end":40},"alias_span":null,"name":"FormatWith","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1868,"byte_end":1878,"line_start":79,"line_end":79,"column_start":27,"column_end":37},"alias_span":null,"name":"IntoChunks","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":761},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1880,"byte_end":1885,"line_start":79,"line_end":79,"column_start":39,"column_end":44},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":751},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1887,"byte_end":1893,"line_start":79,"line_end":79,"column_start":46,"column_end":52},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1895,"byte_end":1902,"line_start":79,"line_end":79,"column_start":54,"column_end":61},"alias_span":null,"name":"GroupBy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":714},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1904,"byte_end":1909,"line_start":79,"line_end":79,"column_start":63,"column_end":68},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1911,"byte_end":1917,"line_start":79,"line_end":79,"column_start":70,"column_end":76},"alias_span":null,"name":"Groups","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1893},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1945,"byte_end":1956,"line_start":80,"line_end":80,"column_start":26,"column_end":37},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2016,"byte_end":2022,"line_start":82,"line_end":82,"column_start":27,"column_end":33},"alias_span":null,"name":"KMerge","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2024,"byte_end":2032,"line_start":82,"line_end":82,"column_start":35,"column_end":43},"alias_span":null,"name":"KMergeBy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":859},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2059,"byte_end":2070,"line_start":83,"line_end":83,"column_start":25,"column_end":36},"alias_span":null,"name":"MergeJoinBy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1939},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2132,"byte_end":2141,"line_start":85,"line_end":85,"column_start":29,"column_end":38},"alias_span":null,"name":"MultiPeek","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1950},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2165,"byte_end":2173,"line_start":86,"line_end":86,"column_start":23,"column_end":31},"alias_span":null,"name":"PadUsing","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2207,"byte_end":2223,"line_start":87,"line_end":87,"column_start":33,"column_end":49},"alias_span":null,"name":"PeekingTakeWhile","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2006},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2259,"byte_end":2273,"line_start":88,"line_end":88,"column_start":35,"column_end":49},"alias_span":null,"name":"ProcessResults","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2017},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2336,"byte_end":2344,"line_start":90,"line_end":90,"column_start":30,"column_end":38},"alias_span":null,"name":"PutBackN","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2027},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2403,"byte_end":2409,"line_start":92,"line_end":92,"column_start":26,"column_end":32},"alias_span":null,"name":"RcIter","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2033},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2432,"byte_end":2439,"line_start":93,"line_end":93,"column_start":22,"column_end":29},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1047},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2463,"byte_end":2473,"line_start":94,"line_end":94,"column_start":23,"column_end":33},"alias_span":null,"name":"RepeatCall","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2042},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2475,"byte_end":2481,"line_start":94,"line_end":94,"column_start":35,"column_end":41},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2051},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2483,"byte_end":2490,"line_start":94,"line_end":94,"column_start":43,"column_end":50},"alias_span":null,"name":"Iterate","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2071},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2542,"byte_end":2545,"line_start":96,"line_end":96,"column_start":18,"column_end":21},"alias_span":null,"name":"Tee","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2078},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2572,"byte_end":2583,"line_start":97,"line_end":97,"column_start":26,"column_end":37},"alias_span":null,"name":"TupleBuffer","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2085},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2585,"byte_end":2597,"line_start":97,"line_end":97,"column_start":39,"column_end":51},"alias_span":null,"name":"TupleWindows","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1114},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2599,"byte_end":2605,"line_start":97,"line_end":97,"column_start":53,"column_end":59},"alias_span":null,"name":"Tuples","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2155},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2666,"byte_end":2672,"line_start":99,"line_end":99,"column_start":27,"column_end":33},"alias_span":null,"name":"Unique","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2142},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2674,"byte_end":2682,"line_start":99,"line_end":99,"column_start":35,"column_end":43},"alias_span":null,"name":"UniqueBy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2712,"byte_end":2724,"line_start":100,"line_end":100,"column_start":28,"column_end":40},"alias_span":null,"name":"WithPosition","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2190},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2751,"byte_end":2756,"line_start":101,"line_end":101,"column_start":26,"column_end":31},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2203},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2783,"byte_end":2793,"line_start":102,"line_end":102,"column_start":26,"column_end":36},"alias_span":null,"name":"ZipLongest","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":2216},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2817,"byte_end":2820,"line_start":103,"line_end":103,"column_start":23,"column_end":26},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":15}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2841,"byte_end":2842,"line_start":105,"line_end":105,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"Step, Product, Dedup, TupleWindows, Tee, Unique, WithPosition, Combinations, Update, TupleCombinations, TakeWhileRef, ZipLongest, PutBack, Interleave, Tuples, MapResults, UniqueBy, PeekingTakeWhile, MergeJoinBy, KMerge, GroupBy, IntoChunks, Format, MultiProduct, Flatten, WhileSome, Merge, ZipEq, InterleaveShortest, Batching, PutBackN, PadUsing, KMergeBy, Intersperse, FormatWith, Positions, Coalesce, MergeBy","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2862,"byte_end":2869,"line_start":106,"line_end":106,"column_start":19,"column_end":26},"alias_span":null,"name":"flatten","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2892,"byte_end":2898,"line_start":107,"line_end":107,"column_start":22,"column_end":28},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":529},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2926,"byte_end":2937,"line_start":108,"line_end":108,"column_start":27,"column_end":38},"alias_span":null,"name":"cons_tuples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":579},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2953,"byte_end":2962,"line_start":109,"line_end":109,"column_start":15,"column_end":24},"alias_span":null,"name":"diff_with","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2978,"byte_end":2982,"line_start":110,"line_end":110,"column_start":15,"column_end":19},"alias_span":null,"name":"Diff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":834},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3034,"byte_end":3043,"line_start":112,"line_end":112,"column_start":23,"column_end":32},"alias_span":null,"name":"kmerge_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1914},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3062,"byte_end":3074,"line_start":113,"line_end":113,"column_start":17,"column_end":29},"alias_span":null,"name":"MinMaxResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3104,"byte_end":3115,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"alias_span":null,"name":"PeekingNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":974},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3147,"byte_end":3162,"line_start":115,"line_end":115,"column_start":31,"column_end":46},"alias_span":null,"name":"process_results","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1018},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3181,"byte_end":3189,"line_start":116,"line_end":116,"column_start":18,"column_end":26},"alias_span":null,"name":"repeat_n","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3209,"byte_end":3220,"line_start":117,"line_end":117,"column_start":19,"column_end":30},"alias_span":null,"name":"repeat_call","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1061},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3222,"byte_end":3228,"line_start":117,"line_end":117,"column_start":32,"column_end":38},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1084},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3230,"byte_end":3237,"line_start":117,"line_end":117,"column_start":40,"column_end":47},"alias_span":null,"name":"iterate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2162},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3263,"byte_end":3271,"line_start":118,"line_end":118,"column_start":24,"column_end":32},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1247},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3291,"byte_end":3299,"line_start":119,"line_end":119,"column_start":19,"column_end":27},"alias_span":null,"name":"multizip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1637},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3359,"byte_end":3371,"line_start":122,"line_end":122,"column_start":25,"column_end":37},"alias_span":null,"name":"EitherOrBoth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":112847,"byte_end":112857,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"alias_span":null,"name":"interleave","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":112863,"byte_end":112868,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"alias_span":null,"name":"merge","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":112874,"byte_end":112882,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"alias_span":null,"name":"put_back","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":983},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":112940,"byte_end":112950,"line_start":18,"line_end":18,"column_start":26,"column_end":36},"alias_span":null,"name":"put_back_n","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":113004,"byte_end":113013,"line_start":20,"line_end":20,"column_start":25,"column_end":34},"alias_span":null,"name":"multipeek","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":113064,"byte_end":113070,"line_start":22,"line_end":22,"column_start":22,"column_end":28},"alias_span":null,"name":"kmerge","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":1209},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":113093,"byte_end":113099,"line_start":23,"line_end":23,"column_start":22,"column_end":28},"alias_span":null,"name":"zip_eq","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":855},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":113121,"byte_end":113134,"line_start":24,"line_end":24,"column_start":21,"column_end":34},"alias_span":null,"name":"merge_join_by","value":"","parent":{"krate":0,"index":468}},{"kind":"Use","ref_id":{"krate":0,"index":997},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":113185,"byte_end":113191,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"alias_span":null,"name":"rciter","value":"","parent":{"krate":0,"index":468}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":2841,"byte_end":2842,"line_start":105,"line_end":105,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"fold, interleave, merge, merge_join_by, zip_eq, kmerge","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":0,"byte_end":70486,"line_start":1,"line_end":2121,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":456},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":523},{"krate":0,"index":532},{"krate":0,"index":560},{"krate":0,"index":584},{"krate":0,"index":611},{"krate":0,"index":619},{"krate":0,"index":776},{"krate":0,"index":786},{"krate":0,"index":847},{"krate":0,"index":877},{"krate":0,"index":886},{"krate":0,"index":910},{"krate":0,"index":929},{"krate":0,"index":965},{"krate":0,"index":981},{"krate":0,"index":993},{"krate":0,"index":1017},{"krate":0,"index":1030},{"krate":0,"index":1044},{"krate":0,"index":1087},{"krate":0,"index":1101},{"krate":0,"index":1150},{"krate":0,"index":1187},{"krate":0,"index":1207},{"krate":0,"index":1221},{"krate":0,"index":1245},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":2389},{"krate":0,"index":2414},{"krate":0,"index":2411},{"krate":0,"index":2408},{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2397},{"krate":0,"index":2399},{"krate":0,"index":1407}],"decl_id":null,"docs":" Itertools — extra iterator adaptors, functions and macros.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"itertools\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":23,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":1226,"byte_end":1233,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"structs","qualname":"::structs","value":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"decl_id":null,"docs":" The concrete iterator types.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1411},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs","byte_start":104863,"byte_end":104875,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"MultiProduct","qualname":"::adaptors::multi_product::MultiProduct","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n multiple iterators of type `I`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs","byte_start":104778,"byte_end":104851,"line_start":14,"line_end":14,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":71898,"byte_end":71908,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::adaptors::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from two iterators until both\n run out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":71813,"byte_end":71886,"line_start":35,"line_end":35,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":72238,"byte_end":72248,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"interleave","qualname":"::adaptors::interleave","value":"fn <I, J> (i: I, j: J) -> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that interleaves elements in `i` and `j`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1450},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":73513,"byte_end":73531,"line_start":99,"line_end":99,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::adaptors::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from the two iterators until\n one of them runs out.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":73428,"byte_end":73501,"line_start":98,"line_end":98,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":75933,"byte_end":75940,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"PutBack","qualname":"::adaptors::PutBack","value":"PutBack {  }","parent":null,"children":[{"krate":0,"index":1466},{"krate":0,"index":1467}],"decl_id":null,"docs":" An iterator adaptor that allows putting back a single\n item to the front of the iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":155},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76077,"byte_end":76085,"line_start":196,"line_end":196,"column_start":8,"column_end":16},"name":"put_back","qualname":"::adaptors::put_back","value":"fn <I> (iterable: I) -> PutBack<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back a single item\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76334,"byte_end":76344,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"with_value","qualname":"<PutBack<I>>::with_value","value":"fn (mut self, value: I::Item) -> Self","parent":null,"children":[],"decl_id":null,"docs":" put back value `value` (builder method)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76500,"byte_end":76510,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PutBack<I>>::into_parts","value":"fn (self) -> (Option<I::Item>, I)","parent":null,"children":[],"decl_id":null,"docs":" Split the `PutBack` into its parts.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76479,"byte_end":76488,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76775,"byte_end":76783,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBack<I>>::put_back","value":"fn (&mut self, x: I::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Put back a single value to the front of the iterator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76754,"byte_end":76763,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1474},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":78244,"byte_end":78251,"line_start":277,"line_end":277,"column_start":12,"column_end":19},"name":"Product","qualname":"::adaptors::Product","value":"Product {  }","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480}],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `I` and `J`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":78159,"byte_end":78232,"line_start":276,"line_end":276,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":81091,"byte_end":81099,"line_start":373,"line_end":373,"column_start":12,"column_end":20},"name":"Batching","qualname":"::adaptors::Batching","value":"Batching {  }","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1493}],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":81006,"byte_end":81079,"line_start":372,"line_end":372,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1499},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":82140,"byte_end":82144,"line_start":413,"line_end":413,"column_start":12,"column_end":16},"name":"Step","qualname":"::adaptors::Step","value":"Step {  }","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502}],"decl_id":null,"docs":" An iterator adaptor that steps a number elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":82055,"byte_end":82128,"line_start":412,"line_end":412,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":84892,"byte_end":84897,"line_start":527,"line_end":527,"column_start":12,"column_end":17},"name":"Merge","qualname":"::adaptors::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":228}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":84807,"byte_end":84880,"line_start":526,"line_end":526,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":236},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":85685,"byte_end":85690,"line_start":563,"line_end":563,"column_start":8,"column_end":13},"name":"merge","qualname":"::adaptors::merge","value":"fn <I, J> (i: I, j: J) -> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements in `i` and `j`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":86763,"byte_end":86770,"line_start":600,"line_end":600,"column_start":12,"column_end":19},"name":"MergeBy","qualname":"::adaptors::MergeBy","value":"MergeBy {  }","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":86678,"byte_end":86751,"line_start":599,"line_end":599,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":277},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":89321,"byte_end":89329,"line_start":701,"line_end":701,"column_start":12,"column_end":20},"name":"Coalesce","qualname":"::adaptors::Coalesce","value":"Coalesce {  }","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":" An iterator adaptor that may join together adjacent elements.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":89236,"byte_end":89309,"line_start":700,"line_end":700,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":90560,"byte_end":90565,"line_start":756,"line_end":756,"column_start":12,"column_end":17},"name":"Dedup","qualname":"::adaptors::Dedup","value":"Dedup {  }","parent":null,"children":[{"krate":0,"index":300}],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":90475,"byte_end":90548,"line_start":755,"line_end":755,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":92276,"byte_end":92288,"line_start":829,"line_end":829,"column_start":12,"column_end":24},"name":"TakeWhileRef","qualname":"::adaptors::TakeWhileRef","value":"TakeWhileRef {  }","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323}],"decl_id":null,"docs":" An iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate returns `true`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":92191,"byte_end":92264,"line_start":828,"line_end":828,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1524},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":93661,"byte_end":93670,"line_start":880,"line_end":880,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::adaptors::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":1526}],"decl_id":null,"docs":" An iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":93576,"byte_end":93649,"line_start":879,"line_end":879,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1533},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":94521,"byte_end":94538,"line_start":914,"line_end":914,"column_start":12,"column_end":29},"name":"TupleCombinations","qualname":"::adaptors::TupleCombinations","value":"TupleCombinations {  }","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538}],"decl_id":null,"docs":" An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\n of a specific size.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":94436,"byte_end":94509,"line_start":913,"line_end":913,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":346},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":94689,"byte_end":94703,"line_start":923,"line_end":923,"column_start":11,"column_end":25},"name":"HasCombination","qualname":"::adaptors::HasCombination","value":"HasCombination<I>: Sized","parent":null,"children":[{"krate":0,"index":348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":348},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":94725,"byte_end":94736,"line_start":924,"line_end":924,"column_start":10,"column_end":21},"name":"Combination","qualname":"::adaptors::HasCombination::Combination","value":"type Combination: From<I> + Iterator<Item = Self>;","parent":{"krate":0,"index":346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1543},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":95357,"byte_end":95374,"line_start":952,"line_end":952,"column_start":12,"column_end":29},"name":"Tuple1Combination","qualname":"::adaptors::Tuple1Combination","value":"Tuple1Combination {  }","parent":null,"children":[{"krate":0,"index":1545}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1566},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":97595,"byte_end":97612,"line_start":1033,"line_end":1033,"column_start":25,"column_end":42},"name":"Tuple2Combination","qualname":"::adaptors::Tuple2Combination","value":"Tuple2Combination {  }","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1591},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":97671,"byte_end":97688,"line_start":1034,"line_end":1034,"column_start":25,"column_end":42},"name":"Tuple3Combination","qualname":"::adaptors::Tuple3Combination","value":"Tuple3Combination {  }","parent":null,"children":[{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1616},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":97752,"byte_end":97769,"line_start":1035,"line_end":1035,"column_start":25,"column_end":42},"name":"Tuple4Combination","qualname":"::adaptors::Tuple4Combination","value":"Tuple4Combination {  }","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1624},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":98068,"byte_end":98075,"line_start":1043,"line_end":1043,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::adaptors::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628}],"decl_id":null,"docs":" An iterator adapter to simply flatten a structure.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":97983,"byte_end":98056,"line_start":1042,"line_end":1042,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":369},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":98660,"byte_end":98667,"line_start":1066,"line_end":1066,"column_start":8,"column_end":15},"name":"flatten","qualname":"::adaptors::flatten","value":"fn <I, J> (iterable: I) -> Flatten<I::IntoIter, J>","parent":null,"children":[],"decl_id":null,"docs":" Flatten an iterable of iterables into a single combined sequence of all\n the elements in the iterables.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":100190,"byte_end":100200,"line_start":1117,"line_end":1117,"column_start":12,"column_end":22},"name":"MapResults","qualname":"::adaptors::MapResults","value":"MapResults {  }","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":" An iterator adapter to apply a transformation within a nested `Result`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":100105,"byte_end":100178,"line_start":1116,"line_end":1116,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":101491,"byte_end":101500,"line_start":1166,"line_end":1166,"column_start":12,"column_end":21},"name":"Positions","qualname":"::adaptors::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"decl_id":null,"docs":" An iterator adapter to get the positions of each element that matches a predicate.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":101406,"byte_end":101479,"line_start":1165,"line_end":1165,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":428},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":102916,"byte_end":102922,"line_start":1224,"line_end":1224,"column_start":12,"column_end":18},"name":"Update","qualname":"::adaptors::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"decl_id":null,"docs":" An iterator adapter to apply a mutating function to each element before yielding it.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":102831,"byte_end":102904,"line_start":1223,"line_end":1223,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1640},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":110850,"byte_end":110854,"line_start":7,"line_end":7,"column_start":5,"column_end":9},"name":"Both","qualname":"::either_or_both::EitherOrBoth::Both","value":"EitherOrBoth::Both(A, B)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Both values are present.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1644},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":110918,"byte_end":110922,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Left","qualname":"::either_or_both::EitherOrBoth::Left","value":"EitherOrBoth::Left(A)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Only the left value of type `A` is present.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1647},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":110984,"byte_end":110989,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Right","qualname":"::either_or_both::EitherOrBoth::Right","value":"EitherOrBoth::Right(B)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Only the right value of type `B` is present.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1637},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":110792,"byte_end":110804,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"EitherOrBoth","qualname":"::either_or_both::EitherOrBoth","value":"EitherOrBoth::{Both, Left, Right}","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1644},{"krate":0,"index":1647}],"decl_id":null,"docs":" Value that either holds a single A or B, or both.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":111108,"byte_end":111116,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"has_left","qualname":"<EitherOrBoth<A, B>>::has_left","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":111260,"byte_end":111269,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"has_right","qualname":"<EitherOrBoth<A, B>>::has_right","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":111436,"byte_end":111440,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"left","qualname":"<EitherOrBoth<A, B>>::left","value":"fn (self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":111680,"byte_end":111685,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"right","qualname":"<EitherOrBoth<A, B>>::right","value":"fn (self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":111907,"byte_end":111913,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<EitherOrBoth<A, B>>::as_ref","value":"fn (&self) -> EitherOrBoth<&A, &B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":112228,"byte_end":112234,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<EitherOrBoth<A, B>>::as_mut","value":"fn (&mut self) -> EitherOrBoth<&mut A, &mut B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":468},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"free","qualname":"::free","value":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":498},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514}],"decl_id":null,"docs":" Free functions that create iterator adaptors or call iterator methods.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":484},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":113432,"byte_end":113441,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::free::enumerate","value":"fn <I> (iterable: I) -> iter::Enumerate<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` with a running index.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":486},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":113763,"byte_end":113766,"line_start":56,"line_end":56,"column_start":8,"column_end":11},"name":"rev","qualname":"::free::rev","value":"fn <I> (iterable: I) -> iter::Rev<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` in reverse.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":114167,"byte_end":114170,"line_start":75,"line_end":75,"column_start":8,"column_end":11},"name":"zip","qualname":"::free::zip","value":"fn <I, J> (i: I, j: J) -> Zip<I::IntoIter, J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":114550,"byte_end":114555,"line_start":93,"line_end":93,"column_start":8,"column_end":13},"name":"chain","qualname":"::free::chain","value":"fn <I, J> (i: I, j: J) -> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that first iterates `i` and then `j`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":494},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":114978,"byte_end":114984,"line_start":109,"line_end":109,"column_start":8,"column_end":14},"name":"cloned","qualname":"::free::cloned","value":"fn <'a, I, T> (iterable: I) -> iter::Cloned<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that clones each element from &T to T","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":498},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":115372,"byte_end":115376,"line_start":125,"line_end":125,"column_start":8,"column_end":12},"name":"fold","qualname":"::free::fold","value":"fn <I, B, F> (iterable: I, init: B, f: F) -> B","parent":null,"children":[],"decl_id":null,"docs":" Perform a fold operation over the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":115751,"byte_end":115754,"line_start":141,"line_end":141,"column_start":8,"column_end":11},"name":"all","qualname":"::free::all","value":"fn <I, F> (iterable: I, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for all elements in the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":116114,"byte_end":116117,"line_start":157,"line_end":157,"column_start":8,"column_end":11},"name":"any","qualname":"::free::any","value":"fn <I, F> (iterable: I, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for any elements in the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":508},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":116442,"byte_end":116445,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"max","qualname":"::free::max","value":"fn <I> (iterable: I) -> Option<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum value of the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":116758,"byte_end":116761,"line_start":189,"line_end":189,"column_start":8,"column_end":11},"name":"min","qualname":"::free::min","value":"fn <I> (iterable: I) -> Option<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum value of the iterable.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":117154,"byte_end":117158,"line_start":207,"line_end":207,"column_start":8,"column_end":12},"name":"join","qualname":"::free::join","value":"fn <I> (iterable: I, sep: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":117119,"byte_end":117146,"line_start":206,"line_end":206,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":514},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":117611,"byte_end":117617,"line_start":225,"line_end":225,"column_start":8,"column_end":14},"name":"sorted","qualname":"::free::sorted","value":"fn <I> (iterable: I) -> Vec<I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Collect all the iterable's elements into a sorted vector in ascending order.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/free.rs","byte_start":117576,"byte_end":117603,"line_start":224,"line_end":224,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/concat_impl.rs","byte_start":118242,"byte_end":118248,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"concat","qualname":"::concat_impl::concat","value":"fn <I> (iterable: I) -> I::Item","parent":null,"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1823},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs","byte_start":120024,"byte_end":120034,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"ConsTuples","qualname":"::cons_tuples_impl::ConsTuples","value":"ConsTuples {  }","parent":null,"children":[{"krate":0,"index":1826}],"decl_id":null,"docs":" An iterator that maps an iterator of tuples like\n `((A, B), C)` to an iterator of `(A, B, C)`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs","byte_start":119922,"byte_end":119995,"line_start":44,"line_end":44,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":529},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs","byte_start":120375,"byte_end":120386,"line_start":64,"line_end":64,"column_start":8,"column_end":19},"name":"cons_tuples","qualname":"::cons_tuples_impl::cons_tuples","value":"fn <I, J> (iterable: I) -> ConsTuples<I, J>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that maps for example iterators of\n `((A, B), C)` to `(A, B, C)`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":535},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":120811,"byte_end":120823,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"Combinations","qualname":"::combinations::Combinations","value":"Combinations {  }","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540}],"decl_id":null,"docs":" An iterator to iterate through all the `n`-length combinations in an iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":120726,"byte_end":120799,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":566},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs","byte_start":125264,"byte_end":125277,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"FirstMismatch","qualname":"::diff::Diff::FirstMismatch","value":"Diff::FirstMismatch(usize, PutBack<I>, PutBack<J>)","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The index of the first non-matching element along with both iterator's remaining elements\n starting with the first mis-match.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":571},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs","byte_start":125410,"byte_end":125417,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Shorter","qualname":"::diff::Diff::Shorter","value":"Diff::Shorter(usize, PutBack<I>)","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The total number of elements that were in `J` along with the remaining elements of `I`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs","byte_start":125538,"byte_end":125544,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Longer","qualname":"::diff::Diff::Longer","value":"Diff::Longer(usize, PutBack<J>)","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" The total number of elements that were in `I` along with the remaining elements of `J`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":563},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs","byte_start":125061,"byte_end":125065,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Diff","qualname":"::diff::Diff","value":"Diff::{FirstMismatch, Shorter, Longer}","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":571},{"krate":0,"index":575}],"decl_id":null,"docs":" A type returned by the [`diff_with`](./fn.diff_with.html) function.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":579},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/diff.rs","byte_start":126293,"byte_end":126302,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"diff_with","qualname":"::diff::diff_with","value":"fn <I, J, F> (i: I, j: J, is_equal: F) -> Option<Diff<I::IntoIter, J::IntoIter>>","parent":null,"children":[],"decl_id":null,"docs":" Compares every element yielded by both `i` and `j` with the given function in lock-step and\n returns a `Diff` which describes how `j` differs from `i`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":587},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs","byte_start":127422,"byte_end":127432,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"FormatWith","qualname":"::format::FormatWith","value":"FormatWith {  }","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1840},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs","byte_start":127855,"byte_end":127861,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Format","qualname":"::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":626},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":131138,"byte_end":131141,"line_start":6,"line_end":6,"column_start":10,"column_end":13},"name":"Key","qualname":"::groupbylazy::KeyFunction::Key","value":"type Key;","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":140607,"byte_end":140614,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"GroupBy","qualname":"::groupbylazy::GroupBy","value":"GroupBy {  }","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" `GroupBy` is the storage for the lazy grouping operation.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":140522,"byte_end":140595,"line_start":288,"line_end":288,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":142481,"byte_end":142487,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"Groups","qualname":"::groupbylazy::Groups","value":"Groups {  }","parent":null,"children":[{"krate":0,"index":705}],"decl_id":null,"docs":" An iterator that yields the Group iterators.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":142396,"byte_end":142469,"line_start":358,"line_end":358,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":714},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":143355,"byte_end":143360,"line_start":393,"line_end":393,"column_start":12,"column_end":17},"name":"Group","qualname":"::groupbylazy::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721}],"decl_id":null,"docs":" An iterator for the elements in a single group.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":737},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":145295,"byte_end":145305,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"IntoChunks","qualname":"::groupbylazy::IntoChunks","value":"IntoChunks {  }","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740}],"decl_id":null,"docs":" `ChunkLazy` is the storage for a lazy chunking operation.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":145210,"byte_end":145283,"line_start":464,"line_end":464,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":751},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":146428,"byte_end":146434,"line_start":510,"line_end":510,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::groupbylazy::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":754}],"decl_id":null,"docs":" An iterator that yields the Chunk iterators.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":146343,"byte_end":146416,"line_start":509,"line_end":509,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":761},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":147152,"byte_end":147157,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"Chunk","qualname":"::groupbylazy::Chunk","value":"Chunk {  }","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"decl_id":null,"docs":" An iterator for the elements in a single chunk.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1893},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs","byte_start":148201,"byte_end":148212,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"Intersperse","qualname":"::intersperse::Intersperse","value":"Intersperse {  }","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897}],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs","byte_start":148099,"byte_end":148172,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":152413,"byte_end":152419,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"KMerge","qualname":"::kmerge_impl::KMerge","value":"KMerge {  }","parent":null,"children":[{"krate":0,"index":809}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators in ascending order.\n If all base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":152328,"byte_end":152401,"line_start":114,"line_end":114,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":812},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":152939,"byte_end":152945,"line_start":140,"line_end":140,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::kmerge_impl::kmerge","value":"fn <I> (iterable: I) -> KMerge<<I::Item as IntoIterator>::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators using\n the ordering function.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":826},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":154599,"byte_end":154607,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"KMergeBy","qualname":"::kmerge_impl::KMergeBy","value":"KMergeBy {  }","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators\n according to an ordering function.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":154514,"byte_end":154587,"line_start":196,"line_end":196,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":834},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":154986,"byte_end":154995,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::kmerge_impl::kmerge_by","value":"fn <I, F> (iterable: I, mut less_than: F) -> KMergeBy<<I::Item as IntoIterator>::IntoIter, F>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":855},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs","byte_start":156718,"byte_end":156731,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::merge_join::merge_join_by","value":"fn <I, J, F> (left: I, right: J, cmp_fn: F) -> MergeJoinBy<I::IntoIter, J::IntoIter, F>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":859},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs","byte_start":157357,"byte_end":157368,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"MergeJoinBy","qualname":"::merge_join::MergeJoinBy","value":"MergeJoinBy {  }","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"decl_id":null,"docs":" An iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs","byte_start":157272,"byte_end":157345,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1916},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs","byte_start":159377,"byte_end":159387,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"name":"NoElements","qualname":"::minmax::MinMaxResult::NoElements","value":"MinMaxResult::NoElements","parent":{"krate":0,"index":1914},"children":[],"decl_id":null,"docs":" Empty iterator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1918},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs","byte_start":159469,"byte_end":159479,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"OneElement","qualname":"::minmax::MinMaxResult::OneElement","value":"MinMaxResult::OneElement(T)","parent":{"krate":0,"index":1914},"children":[],"decl_id":null,"docs":" Iterator with one element, so the minimum and maximum are the same\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1921},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs","byte_start":159592,"byte_end":159598,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"MinMax","qualname":"::minmax::MinMaxResult::MinMax","value":"MinMaxResult::MinMax(T, T)","parent":{"krate":0,"index":1914},"children":[],"decl_id":null,"docs":" More than one element in the iterator, the first element is not larger\n than the second\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1914},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs","byte_start":159332,"byte_end":159344,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"MinMaxResult","qualname":"::minmax::MinMaxResult","value":"MinMaxResult::{NoElements, OneElement, MinMax}","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1921}],"decl_id":null,"docs":" `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\n more detail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs","byte_start":160416,"byte_end":160427,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"into_option","qualname":"<MinMaxResult<T>>::into_option","value":"fn (self) -> Option<(T, T)>","parent":null,"children":[],"decl_id":null,"docs":" `into_option` creates an `Option` of type `(T, T)`. The returned `Option`\n has variant `None` if and only if the `MinMaxResult` has variant\n `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.\n If the `MinMaxResult` has variant `OneElement(x)`, performing this\n operation will make one clone of `x`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1939},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":163227,"byte_end":163236,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"MultiPeek","qualname":"::multipeek_impl::MultiPeek","value":"MultiPeek {  }","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943}],"decl_id":null,"docs":" See [`multipeek()`](../fn.multipeek.html) for more information.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":163462,"byte_end":163471,"line_start":20,"line_end":20,"column_start":8,"column_end":17},"name":"multipeek","qualname":"::multipeek_impl::multipeek","value":"fn <I> (iterable: I) -> MultiPeek<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that allows the user to peek at multiple `.next()`\n values without advancing the base iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":163753,"byte_end":163763,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"reset_peek","qualname":"<MultiPeek<I>>::reset_peek","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset the peeking “cursor”\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":164027,"byte_end":164031,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"peek","qualname":"<MultiPeek<I>>::peek","value":"fn (&mut self) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Works exactly like `.next()` with the only difference that it doesn't\n advance itself. `.peek()` can be called multiple times, to peek\n further ahead.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1950},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs","byte_start":165830,"byte_end":165838,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"PadUsing","qualname":"::pad_tail::PadUsing","value":"PadUsing {  }","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956}],"decl_id":null,"docs":" An iterator adaptor that pads a sequence to a minimum length by filling\n missing elements using a closure.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs","byte_start":165745,"byte_end":165818,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":933},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":168036,"byte_end":168047,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"name":"PeekingNext","qualname":"::peeking_take_while::PeekingNext","value":"PeekingNext: Iterator","parent":null,"children":[{"krate":0,"index":934}],"decl_id":null,"docs":" An iterator that allows peeking at an element before deciding to accept it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":168231,"byte_end":168243,"line_start":19,"line_end":19,"column_start":8,"column_end":20},"name":"peeking_next","qualname":"::peeking_take_while::PeekingNext::peeking_next","value":"fn <F> (&mut self, accept: F) -> Option<Self::Item>","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" Pass a reference to the next iterator element to the closure `accept`;\n if `accept` returns true, return it as the next element,\n else None.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":948},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":169762,"byte_end":169778,"line_start":80,"line_end":80,"column_start":12,"column_end":28},"name":"PeekingTakeWhile","qualname":"::peeking_take_while::PeekingTakeWhile","value":"PeekingTakeWhile {  }","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953}],"decl_id":null,"docs":" An iterator adaptor that takes items while a closure returns `true`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":169677,"byte_end":169750,"line_start":79,"line_end":79,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2006},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs","byte_start":172264,"byte_end":172278,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"ProcessResults","qualname":"::process_results_impl::ProcessResults","value":"ProcessResults {  }","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011}],"decl_id":null,"docs":" An iterator that produces only the `T` values as long as the\n inner iterator produces `Ok(T)`.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs","byte_start":172162,"byte_end":172235,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":974},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs","byte_start":174183,"byte_end":174198,"line_start":71,"line_end":71,"column_start":8,"column_end":23},"name":"process_results","qualname":"::process_results_impl::process_results","value":"fn <I, F, T, E, R> (iterable: I, processor: F) -> Result<R, E>","parent":null,"children":[],"decl_id":null,"docs":" “Lift” a function of the values of an iterator so that it can process\n an iterator of `Result` values instead.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2017},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs","byte_start":174722,"byte_end":174730,"line_start":8,"line_end":8,"column_start":12,"column_end":20},"name":"PutBackN","qualname":"::put_back_n_impl::PutBackN","value":"PutBackN {  }","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2020}],"decl_id":null,"docs":" An iterator adaptor that allows putting multiple\n items in front of the iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":983},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs","byte_start":174933,"byte_end":174943,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"put_back_n","qualname":"::put_back_n_impl::put_back_n","value":"fn <I> (iterable: I) -> PutBackN<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back multiple values to the front\n of the iteration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs","byte_start":175526,"byte_end":175534,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBackN<I>>::put_back","value":"fn (&mut self, x: I::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts x in front of the iterator.\n The values are yielded in order of the most recently put back\n values first.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs","byte_start":175505,"byte_end":175514,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2027},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs","byte_start":176165,"byte_end":176171,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"RcIter","qualname":"::rciter_impl::RcIter","value":"RcIter { rciter }","parent":null,"children":[{"krate":0,"index":2029}],"decl_id":null,"docs":" A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2029},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs","byte_start":176213,"byte_end":176219,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"rciter","qualname":"::rciter_impl::RcIter::rciter","value":"std::rc::Rc<std::cell::RefCell<I>>","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":" The boxed iterator.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":997},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs","byte_start":177488,"byte_end":177494,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"rciter","qualname":"::rciter_impl::rciter","value":"fn <I> (iterable: I) -> RcIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator inside a `Rc<RefCell<_>>` wrapper.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2033},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs","byte_start":179001,"byte_end":179008,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::repeatn::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036}],"decl_id":null,"docs":" An iterator that produces *n* repetitions of an element.","sig":null,"attributes":[{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs","byte_start":178907,"byte_end":178972,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1018},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs","byte_start":179125,"byte_end":179133,"line_start":13,"line_end":13,"column_start":8,"column_end":16},"name":"repeat_n","qualname":"::repeatn::repeat_n","value":"fn <A> (element: A, n: usize) -> RepeatN<A>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that produces `n` repetitions of `element`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1047},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":182744,"byte_end":182754,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"RepeatCall","qualname":"::sources::RepeatCall","value":"RepeatCall {  }","parent":null,"children":[{"krate":0,"index":1049}],"decl_id":null,"docs":" See [`repeat_call`](../fn.repeat_call.html) for more information.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1052},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":183446,"byte_end":183457,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"repeat_call","qualname":"::sources::repeat_call","value":"fn <F, A> (function: F) -> RepeatCall<F>","parent":null,"children":[],"decl_id":null,"docs":" An iterator source that produces elements indefinitely by calling\n a given closure.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1061},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":185064,"byte_end":185070,"line_start":97,"line_end":97,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sources::unfold","value":"fn <A, St, F> (initial_state: St, f: F) -> Unfold<St, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unfold source with the specified closure as the \"iterator\n function\" and an initial state to eventually pass to the closure","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2042},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":185496,"byte_end":185502,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::sources::Unfold","value":"Unfold { state }","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046}],"decl_id":null,"docs":" See [`unfold`](../fn.unfold.html) for more information.\n","sig":null,"attributes":[{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":185419,"byte_end":185484,"line_start":114,"line_end":114,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2046},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":185610,"byte_end":185615,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"name":"state","qualname":"::sources::Unfold::state","value":"St","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" Internal state that will be passed to the closure on the next iteration\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2051},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":186275,"byte_end":186282,"line_start":145,"line_end":145,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::sources::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2055}],"decl_id":null,"docs":" An iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":186198,"byte_end":186263,"line_start":144,"line_end":144,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1084},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":187039,"byte_end":187046,"line_start":180,"line_end":180,"column_start":8,"column_end":15},"name":"iterate","qualname":"::sources::iterate","value":"fn <St, F> (initial_value: St, f: F) -> Iterate<St, F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2071},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs","byte_start":187767,"byte_end":187770,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"Tee","qualname":"::tee::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074}],"decl_id":null,"docs":" One half of an iterator pair where both return the same elements.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs","byte_start":187665,"byte_end":187738,"line_start":19,"line_end":19,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2078},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":189616,"byte_end":189627,"line_start":10,"line_end":10,"column_start":12,"column_end":23},"name":"TupleBuffer","qualname":"::tuple_impl::TupleBuffer","value":"TupleBuffer {  }","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081}],"decl_id":null,"docs":" An iterator over a incomplete tuple.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1114},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":190853,"byte_end":190859,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"Tuples","qualname":"::tuple_impl::Tuples","value":"Tuples {  }","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"decl_id":null,"docs":" An iterator that groups the items in tuples of a specific size.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":190768,"byte_end":190841,"line_start":64,"line_end":64,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":191898,"byte_end":191909,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Tuples<I, T>>::into_buffer","value":"fn (self) -> TupleBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a buffer with the produced items that was not enough to be grouped in a tuple.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2085},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":192273,"byte_end":192285,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"TupleWindows","qualname":"::tuple_impl::TupleWindows","value":"TupleWindows {  }","parent":null,"children":[{"krate":0,"index":2088},{"krate":0,"index":2089}],"decl_id":null,"docs":" An iterator over all contiguous windows that produces tuples of a specific size.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":192171,"byte_end":192244,"line_start":119,"line_end":119,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1140},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193582,"byte_end":193594,"line_start":174,"line_end":174,"column_start":11,"column_end":23},"name":"TupleCollect","qualname":"::tuple_impl::TupleCollect","value":"TupleCollect: Sized","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1148}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1141},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193613,"byte_end":193617,"line_start":175,"line_end":175,"column_start":10,"column_end":14},"name":"Item","qualname":"::tuple_impl::TupleCollect::Item","value":"type Item;","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1142},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193628,"byte_end":193634,"line_start":176,"line_end":176,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::tuple_impl::TupleCollect::Buffer","value":"type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193713,"byte_end":193730,"line_start":178,"line_end":178,"column_start":8,"column_end":25},"name":"collect_from_iter","qualname":"::tuple_impl::TupleCollect::collect_from_iter","value":"fn <I> (iter: I, buf: &mut Self::Buffer) -> Option<Self>","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193841,"byte_end":193865,"line_start":181,"line_end":181,"column_start":8,"column_end":32},"name":"collect_from_iter_no_buf","qualname":"::tuple_impl::TupleCollect::collect_from_iter_no_buf","value":"fn <I> (iter: I) -> Option<Self>","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193952,"byte_end":193961,"line_start":184,"line_end":184,"column_start":8,"column_end":17},"name":"num_items","qualname":"::tuple_impl::TupleCollect::num_items","value":"fn () -> usize","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193982,"byte_end":193997,"line_start":186,"line_end":186,"column_start":8,"column_end":23},"name":"left_shift_push","qualname":"::tuple_impl::TupleCollect::left_shift_push","value":"fn (&mut self, item: Self::Item) -> ()","parent":{"krate":0,"index":1140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2142},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":196724,"byte_end":196732,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"UniqueBy","qualname":"::unique_impl::UniqueBy","value":"UniqueBy {  }","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":196639,"byte_end":196712,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2155},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":199354,"byte_end":199360,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"Unique","qualname":"::unique_impl::Unique","value":"Unique {  }","parent":null,"children":[{"krate":0,"index":2157}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":199269,"byte_end":199342,"line_start":111,"line_end":111,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":200161,"byte_end":200173,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"WithPosition","qualname":"::with_position::WithPosition","value":"WithPosition {  }","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194}],"decl_id":null,"docs":" An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":200076,"byte_end":200149,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2164},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":200790,"byte_end":200795,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"First","qualname":"::with_position::Position::First","value":"Position::First(T)","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":" This is the first element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2167},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":200860,"byte_end":200866,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Middle","qualname":"::with_position::Position::Middle","value":"Position::Middle(T)","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":" This is neither the first nor the last element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2170},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":200909,"byte_end":200913,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Last","qualname":"::with_position::Position::Last","value":"Position::Last(T)","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":" This is the last element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2173},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":200956,"byte_end":200960,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Only","qualname":"::with_position::Position::Only","value":"Position::Only(T)","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":" This is the only element.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2162},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":200737,"byte_end":200745,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"name":"Position","qualname":"::with_position::Position","value":"Position::{First, Middle, Last, Only}","parent":null,"children":[{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2170},{"krate":0,"index":2173}],"decl_id":null,"docs":" A value yielded by `WithPosition`.\n Indicates the position of this element in the iterator results.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":201033,"byte_end":201043,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Position<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2190},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs","byte_start":202849,"byte_end":202854,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::zip_eq_impl::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2194}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs","byte_start":202764,"byte_end":202837,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1209},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs","byte_start":203229,"byte_end":203235,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::zip_eq_impl::zip_eq","value":"fn <I, J> (i: I, j: J) -> ZipEq<I::IntoIter, J::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2203},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs","byte_start":204660,"byte_end":204670,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"ZipLongest","qualname":"::zip_longest::ZipLongest","value":"ZipLongest {  }","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs","byte_start":204575,"byte_end":204648,"line_start":16,"line_end":16,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2216},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs","byte_start":206694,"byte_end":206697,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Zip","qualname":"::ziptuple::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":2218}],"decl_id":null,"docs":" See [`multizip`](../fn.multizip.html) for more information.\n","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs","byte_start":206609,"byte_end":206682,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1247},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/ziptuple.rs","byte_start":207861,"byte_end":207869,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"multizip","qualname":"::ziptuple::multizip","value":"fn <T, U> (t: U) -> Zip<T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1253},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":8105,"byte_end":8114,"line_start":283,"line_end":283,"column_start":11,"column_end":20},"name":"Itertools","qualname":"::Itertools","value":"Itertools: Iterator","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1346},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1390}],"decl_id":null,"docs":" The trait `Itertools`: extra iterator adaptors and methods for iterators.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":8513,"byte_end":8523,"line_start":298,"line_end":298,"column_start":8,"column_end":18},"name":"interleave","qualname":"::Itertools::interleave","value":"fn <J> (self, other: J) -> Interleave<Self, J::IntoIter>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until both have run out.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":9046,"byte_end":9065,"line_start":316,"line_end":316,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::Itertools::interleave_shortest","value":"fn <J> (self, other: J) -> InterleaveShortest<Self, J::IntoIter>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until at least one of them has run\n out.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":9644,"byte_end":9655,"line_start":335,"line_end":335,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::Itertools::intersperse","value":"fn (self, element: Self::Item) -> Intersperse<Self>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":10898,"byte_end":10909,"line_start":369,"line_end":369,"column_start":8,"column_end":19},"name":"zip_longest","qualname":"::Itertools::zip_longest","value":"fn <J> (self, other: J) -> ZipLongest<Self, J::IntoIter>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of two optional elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":10881,"byte_end":10890,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":11347,"byte_end":11353,"line_start":382,"line_end":382,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::Itertools::zip_eq","value":"fn <J> (self, other: J) -> ZipEq<Self, J::IntoIter>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":11330,"byte_end":11339,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":12269,"byte_end":12277,"line_start":412,"line_end":412,"column_start":8,"column_end":16},"name":"batching","qualname":"::Itertools::batching","value":"fn <B, F> (self, f: F) -> Batching<Self, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the\n iterator and may pick off as many elements as it likes, to produce the\n next iterator element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":13908,"byte_end":13916,"line_start":453,"line_end":453,"column_start":8,"column_end":16},"name":"group_by","qualname":"::Itertools::group_by","value":"fn <K, F> (self, key: F) -> GroupBy<K, Self, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an *iterable* that can group iterator elements.\n Consecutive elements that map to the same key (“runs”), are assigned\n to the same group.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":13873,"byte_end":13900,"line_start":452,"line_end":452,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":15195,"byte_end":15201,"line_start":489,"line_end":489,"column_start":8,"column_end":14},"name":"chunks","qualname":"::Itertools::chunks","value":"fn (self, size: usize) -> IntoChunks<Self>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an *iterable* that can chunk the iterator.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":15160,"byte_end":15187,"line_start":488,"line_end":488,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":16557,"byte_end":16570,"line_start":527,"line_end":527,"column_start":8,"column_end":21},"name":"tuple_windows","qualname":"::Itertools::tuple_windows","value":"fn <T> (self) -> TupleWindows<Self, T>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator over all contiguous windows producing tuples of\n a specific size (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":17879,"byte_end":17885,"line_start":566,"line_end":566,"column_start":8,"column_end":14},"name":"tuples","qualname":"::Itertools::tuples","value":"fn <T> (self) -> Tuples<Self, T>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator that groups the items in tuples of a specific size\n (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":18694,"byte_end":18697,"line_start":591,"line_end":591,"column_start":8,"column_end":11},"name":"tee","qualname":"::Itertools::tee","value":"fn (self) -> (Tee<Self>, Tee<Self>)","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Split into an iterator pair that both yield all elements from\n the original iterator.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":18659,"byte_end":18686,"line_start":590,"line_end":590,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":19335,"byte_end":19339,"line_start":614,"line_end":614,"column_start":8,"column_end":12},"name":"step","qualname":"::Itertools::step","value":"fn (self, n: usize) -> Step<Self>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that steps `n` elements in the base iterator\n for each iteration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":19856,"byte_end":19867,"line_start":631,"line_end":631,"column_start":8,"column_end":19},"name":"map_results","qualname":"::Itertools::map_results","value":"fn <F, T, U, E> (self, f: F) -> MapResults<Self, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies the provided closure\n to every `Result::Ok` value. `Result::Err` values are\n unchanged.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":20530,"byte_end":20535,"line_start":652,"line_end":652,"column_start":8,"column_end":13},"name":"merge","qualname":"::Itertools::merge","value":"fn <J> (self, other: J) -> Merge<Self, J::IntoIter>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in\n ascending order.  If both base iterators are sorted (ascending), the\n result is sorted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":21312,"byte_end":21320,"line_start":676,"line_end":676,"column_start":8,"column_end":16},"name":"merge_by","qualname":"::Itertools::merge_by","value":"fn <J, F> (self, other: J, is_first: F) -> MergeBy<Self, J::IntoIter, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in order.\n This is much like `.merge()` but allows for a custom ordering.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":22910,"byte_end":22923,"line_start":716,"line_end":716,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::Itertools::merge_join_by","value":"fn <J, F> (self, other: J, cmp_fn: F) -> MergeJoinBy<Self, J::IntoIter, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Create an iterator that merges items from both this and the specified\n iterator in ascending order.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":22893,"byte_end":22902,"line_start":715,"line_end":715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":23757,"byte_end":23763,"line_start":742,"line_end":742,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::Itertools::kmerge","value":"fn (self) -> KMerge<<Self::Item as IntoIterator>::IntoIter>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them in ascending order.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":23722,"byte_end":23749,"line_start":741,"line_end":741,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":24768,"byte_end":24777,"line_start":771,"line_end":771,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::Itertools::kmerge_by","value":"fn <F> (self, first: F) -> KMergeBy<<Self::Item as IntoIterator>::IntoIter, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them according to the given closure.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":24733,"byte_end":24760,"line_start":770,"line_end":770,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":25529,"byte_end":25546,"line_start":792,"line_end":792,"column_start":8,"column_end":25},"name":"cartesian_product","qualname":"::Itertools::cartesian_product","value":"fn <J> (self, other: J) -> Product<Self, J::IntoIter>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `self` and `J`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":27001,"byte_end":27024,"line_start":827,"line_end":827,"column_start":8,"column_end":31},"name":"multi_cartesian_product","qualname":"::Itertools::multi_cartesian_product","value":"fn (self) -> MultiProduct<<Self::Item as IntoIterator>::IntoIter>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n all subiterators returned by meta-iterator `self`.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":26966,"byte_end":26993,"line_start":826,"line_end":826,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":28517,"byte_end":28525,"line_start":864,"line_end":864,"column_start":8,"column_end":16},"name":"coalesce","qualname":"::Itertools::coalesce","value":"fn <F> (self, f: F) -> Coalesce<Self, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that uses the passed-in closure to\n optionally merge together consecutive elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":29239,"byte_end":29244,"line_start":886,"line_end":886,"column_start":8,"column_end":13},"name":"dedup","qualname":"::Itertools::dedup","value":"fn (self) -> Dedup<Self>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":29935,"byte_end":29941,"line_start":908,"line_end":908,"column_start":8,"column_end":14},"name":"unique","qualname":"::Itertools::unique","value":"fn (self) -> Unique<Self>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration. Duplicates\n are detected using hash and equality.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":29900,"byte_end":29927,"line_start":907,"line_end":907,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":30698,"byte_end":30707,"line_start":930,"line_end":930,"column_start":8,"column_end":17},"name":"unique_by","qualname":"::Itertools::unique_by","value":"fn <V, F> (self, f: F) -> UniqueBy<Self, V, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":30663,"byte_end":30690,"line_start":929,"line_end":929,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":31444,"byte_end":31462,"line_start":950,"line_end":950,"column_start":8,"column_end":26},"name":"peeking_take_while","qualname":"::Itertools::peeking_take_while","value":"fn <F> (&mut self, accept: F) -> PeekingTakeWhile<Self, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from this iterator and\n takes items while the closure `accept` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":32408,"byte_end":32422,"line_start":975,"line_end":975,"column_start":8,"column_end":22},"name":"take_while_ref","qualname":"::Itertools::take_while_ref","value":"fn <F> (&mut self, accept: F) -> TakeWhileRef<Self, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate `accept` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":33088,"byte_end":33098,"line_start":996,"line_end":996,"column_start":8,"column_end":18},"name":"while_some","qualname":"::Itertools::while_some","value":"fn <A> (self) -> WhileSome<Self>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":34529,"byte_end":34547,"line_start":1035,"line_end":1035,"column_start":8,"column_end":26},"name":"tuple_combinations","qualname":"::Itertools::tuple_combinations","value":"fn <T> (self) -> TupleCombinations<Self, T>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the combinations of the\n elements from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":35353,"byte_end":35365,"line_start":1061,"line_end":1061,"column_start":8,"column_end":20},"name":"combinations","qualname":"::Itertools::combinations","value":"fn (self, n: usize) -> Combinations<Self>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the `n`-length combinations of\n the elements from an iterator.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":35318,"byte_end":35345,"line_start":1060,"line_end":1060,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":36195,"byte_end":36204,"line_start":1085,"line_end":1085,"column_start":8,"column_end":17},"name":"pad_using","qualname":"::Itertools::pad_using","value":"fn <F> (self, min: usize, f: F) -> PadUsing<Self, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that pads the sequence to a minimum length of\n `min` by filling missing elements using a closure `f`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":36926,"byte_end":36933,"line_start":1108,"line_end":1108,"column_start":8,"column_end":15},"name":"flatten","qualname":"::Itertools::flatten","value":"fn (self) -> Flatten<Self, <Self::Item as IntoIterator>::IntoIter>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Flatten an iterator of iterables into a single combined sequence of all\n the elements in the iterables.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":37858,"byte_end":37871,"line_start":1134,"line_end":1134,"column_start":8,"column_end":21},"name":"with_position","qualname":"::Itertools::with_position","value":"fn (self) -> WithPosition<Self>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that wraps each element in a `Position` to\n ease special-case handling of the first or last elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":38550,"byte_end":38559,"line_start":1153,"line_end":1153,"column_start":8,"column_end":17},"name":"positions","qualname":"::Itertools::positions","value":"fn <P> (self, predicate: P) -> Positions<Self, P>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that yields the indices of all elements\n satisfying a predicate, counted from the start of the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":39112,"byte_end":39118,"line_start":1170,"line_end":1170,"column_start":8,"column_end":14},"name":"update","qualname":"::Itertools::update","value":"fn <F> (self, updater: F) -> Update<Self, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies a mutating function\n to each element before yielding it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":39743,"byte_end":39753,"line_start":1191,"line_end":1191,"column_start":8,"column_end":18},"name":"next_tuple","qualname":"::Itertools::next_tuple","value":"fn <T> (&mut self) -> Option<T>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Advances the iterator and returns the next items grouped in a tuple of\n a specific size (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":40495,"byte_end":40508,"line_start":1216,"line_end":1216,"column_start":8,"column_end":21},"name":"collect_tuple","qualname":"::Itertools::collect_tuple","value":"fn <T> (mut self) -> Option<T>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Collects all items from the iterator into a tuple of a specific size\n (up to 4).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":41189,"byte_end":41202,"line_start":1240,"line_end":1240,"column_start":8,"column_end":21},"name":"find_position","qualname":"::Itertools::find_position","value":"fn <P> (&mut self, mut pred: P) -> Option<(usize, Self::Item)>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Find the position and value of the first element satisfying a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":42051,"byte_end":42060,"line_start":1269,"line_end":1269,"column_start":8,"column_end":17},"name":"all_equal","qualname":"::Itertools::all_equal","value":"fn (&mut self) -> bool","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Check whether all elements compare equal.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":42740,"byte_end":42748,"line_start":1290,"line_end":1290,"column_start":8,"column_end":16},"name":"dropping","qualname":"::Itertools::dropping","value":"fn (mut self, n: usize) -> Self","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Consume the first `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":43441,"byte_end":43454,"line_start":1314,"line_end":1314,"column_start":8,"column_end":21},"name":"dropping_back","qualname":"::Itertools::dropping_back","value":"fn (mut self, n: usize) -> Self","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Consume the last `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":44177,"byte_end":44184,"line_start":1341,"line_end":1341,"column_start":8,"column_end":15},"name":"foreach","qualname":"::Itertools::foreach","value":"fn <F> (self, mut f: F) -> ()","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Run the closure `f` eagerly on each element of the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":44847,"byte_end":44853,"line_start":1361,"line_end":1361,"column_start":8,"column_end":14},"name":"concat","qualname":"::Itertools::concat","value":"fn (self) -> Self::Item","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":45181,"byte_end":45192,"line_start":1371,"line_end":1371,"column_start":8,"column_end":19},"name":"collect_vec","qualname":"::Itertools::collect_vec","value":"fn (self) -> Vec<Self::Item>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" `.collect_vec()` is simply a type specialization of `.collect()`,\n for convenience.\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":45146,"byte_end":45173,"line_start":1370,"line_end":1370,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":45809,"byte_end":45817,"line_start":1393,"line_end":1393,"column_start":8,"column_end":16},"name":"set_from","qualname":"::Itertools::set_from","value":"fn <'a, A, J> (&mut self, from: J) -> usize","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Assign to each reference in `self` from the `from` iterator,\n stopping at the shortest of the two iterators.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":45792,"byte_end":45801,"line_start":1392,"line_end":1392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":46561,"byte_end":46565,"line_start":1419,"line_end":1419,"column_start":8,"column_end":12},"name":"join","qualname":"::Itertools::join","value":"fn (&mut self, sep: &str) -> String","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":46526,"byte_end":46553,"line_start":1418,"line_end":1418,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":47693,"byte_end":47699,"line_start":1453,"line_end":1453,"column_start":8,"column_end":14},"name":"format","qualname":"::Itertools::format","value":"fn (self, sep: &str) -> Format<Self>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":49177,"byte_end":49188,"line_start":1491,"line_end":1491,"column_start":8,"column_end":19},"name":"format_with","qualname":"::Itertools::format_with","value":"fn <F> (self, sep: &str, format: F) -> FormatWith<Self, F>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":50909,"byte_end":50921,"line_start":1540,"line_end":1540,"column_start":8,"column_end":20},"name":"fold_results","qualname":"::Itertools::fold_results","value":"fn <A, E, B, F> (&mut self, mut start: B, mut f: F) -> Result<B, E>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Fold `Result` values from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":52078,"byte_end":52090,"line_start":1572,"line_end":1572,"column_start":8,"column_end":20},"name":"fold_options","qualname":"::Itertools::fold_options","value":"fn <A, B, F> (&mut self, mut start: B, mut f: F) -> Option<B>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Fold `Option` values from an iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":52890,"byte_end":52895,"line_start":1597,"line_end":1597,"column_start":8,"column_end":13},"name":"fold1","qualname":"::Itertools::fold1","value":"fn <F> (mut self, f: F) -> Option<Self::Item>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Accumulator of the elements in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":54959,"byte_end":54969,"line_start":1653,"line_end":1653,"column_start":8,"column_end":18},"name":"tree_fold1","qualname":"::Itertools::tree_fold1","value":"fn <F> (mut self, mut f: F) -> Option<Self::Item>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Accumulate the elements in the iterator in a tree-like manner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":58465,"byte_end":58475,"line_start":1751,"line_end":1751,"column_start":8,"column_end":18},"name":"fold_while","qualname":"::Itertools::fold_while","value":"fn <B, F> (&mut self, init: B, mut f: F) -> FoldWhile<B>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" An iterator method that applies a function, producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":59417,"byte_end":59423,"line_start":1779,"line_end":1779,"column_start":8,"column_end":14},"name":"sorted","qualname":"::Itertools::sorted","value":"fn (self) -> Vec<Self::Item>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Collect all iterator elements into a sorted vector in ascending order.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":59382,"byte_end":59409,"line_start":1778,"line_end":1778,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":60319,"byte_end":60328,"line_start":1807,"line_end":1807,"column_start":8,"column_end":17},"name":"sorted_by","qualname":"::Itertools::sorted_by","value":"fn <F> (self, cmp: F) -> Vec<Self::Item>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Collect all iterator elements into a sorted vector.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":60284,"byte_end":60311,"line_start":1806,"line_end":1806,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":61311,"byte_end":61324,"line_start":1838,"line_end":1838,"column_start":8,"column_end":21},"name":"sorted_by_key","qualname":"::Itertools::sorted_by_key","value":"fn <K, F> (self, f: F) -> Vec<Self::Item>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Collect all iterator elements into a sorted vector.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":61276,"byte_end":61303,"line_start":1837,"line_end":1837,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":62269,"byte_end":62282,"line_start":1870,"line_end":1870,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::Itertools::partition_map","value":"fn <A, B, F, L, R> (self, predicate: F) -> (A, B)","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Collect all iterator elements into one of two\n partitions. Unlike `Iterator::partition`, each partition may\n have a distinct type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":63392,"byte_end":63406,"line_start":1904,"line_end":1904,"column_start":8,"column_end":22},"name":"into_group_map","qualname":"::Itertools::into_group_map","value":"fn <K, V> (self) -> HashMap<K, Vec<V>>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return a `HashMap` of keys mapped to `Vec`s of values. Keys and values\n are taken from `(Key, Value)` tuple pairs yielded by the input iterator.\n \n ```\n use itertools::Itertools;\n \n let data = vec![(0, 10), (2, 12), (3, 13), (0, 20), (3, 33), (2, 42)];\n let lookup = data.into_iter().into_group_map();\n \n assert_eq!(lookup[&0], vec![10, 20]);\n assert_eq!(lookup.get(&1), None);\n assert_eq!(lookup[&2], vec![12, 42]);\n assert_eq!(lookup[&3], vec![13, 33]);\n ```\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":63357,"byte_end":63384,"line_start":1903,"line_end":1903,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":64869,"byte_end":64875,"line_start":1946,"line_end":1946,"column_start":8,"column_end":14},"name":"minmax","qualname":"::Itertools::minmax","value":"fn (self) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return the minimum and maximum elements in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":65571,"byte_end":65584,"line_start":1963,"line_end":1963,"column_start":8,"column_end":21},"name":"minmax_by_key","qualname":"::Itertools::minmax_by_key","value":"fn <K, F> (self, key: F) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":66222,"byte_end":66231,"line_start":1977,"line_end":1977,"column_start":8,"column_end":17},"name":"minmax_by","qualname":"::Itertools::minmax_by","value":"fn <F> (self, mut compare: F) -> MinMaxResult<Self::Item>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified comparison function.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1396},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":66960,"byte_end":66965,"line_start":2001,"line_end":2001,"column_start":8,"column_end":13},"name":"equal","qualname":"::equal","value":"fn <I, J> (a: I, b: J) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if both iterables produce equal sequences\n (elements pairwise equal and sequences of the same length),\n `false` otherwise.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1399},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":67785,"byte_end":67797,"line_start":2029,"line_end":2029,"column_start":8,"column_end":20},"name":"assert_equal","qualname":"::assert_equal","value":"fn <I, J> (a: I, b: J) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Assert that two iterables produce equal sequences, with the same\n semantics as *equal(a, b)*.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1402},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":69024,"byte_end":69033,"line_start":2071,"line_end":2071,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"fn <'a, A, I, F> (iter: I, mut pred: F) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Partition a sequence using predicate `pred` so that elements\n that map to `true` are placed before elements which map to `false`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2391},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":69969,"byte_end":69977,"line_start":2101,"line_end":2101,"column_start":5,"column_end":13},"name":"Continue","qualname":"::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":2389},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2394},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":70038,"byte_end":70042,"line_start":2103,"line_end":2103,"column_start":5,"column_end":9},"name":"Done","qualname":"::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":2389},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2389},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":69909,"byte_end":69918,"line_start":2099,"line_end":2099,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::FoldWhile","value":"FoldWhile::{Continue, Done}","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2394}],"decl_id":null,"docs":" An enum used for controlling the execution of `.fold_while()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":70134,"byte_end":70144,"line_start":2108,"line_end":2108,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value in the continue or done.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":70337,"byte_end":70344,"line_start":2115,"line_end":2115,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `self` is `Done`, false if it is `Continue`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs","byte_start":105877,"byte_end":105889,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs","byte_start":107995,"byte_end":108011,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs","byte_start":108659,"byte_end":108671,"line_start":146,"line_end":146,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":72551,"byte_end":72561,"line_start":64,"line_end":64,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":73972,"byte_end":73990,"line_start":120,"line_end":120,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76240,"byte_end":76247,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76866,"byte_end":76873,"line_start":230,"line_end":230,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":78720,"byte_end":78727,"line_start":303,"line_end":303,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":81160,"byte_end":81168,"line_start":378,"line_end":378,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":81396,"byte_end":81404,"line_start":387,"line_end":387,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":82444,"byte_end":82448,"line_start":431,"line_end":431,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":83046,"byte_end":83050,"line_start":458,"line_end":458,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":83266,"byte_end":83275,"line_start":473,"line_end":473,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":83507,"byte_end":83516,"line_start":484,"line_end":484,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":85019,"byte_end":85024,"line_start":534,"line_end":534,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":85261,"byte_end":85266,"line_start":545,"line_end":545,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":86072,"byte_end":86077,"line_start":577,"line_end":577,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":86915,"byte_end":86922,"line_start":608,"line_end":608,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":87447,"byte_end":87454,"line_start":630,"line_end":630,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":87722,"byte_end":87729,"line_start":642,"line_end":642,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":88189,"byte_end":88201,"line_start":666,"line_end":666,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":89435,"byte_end":89443,"line_start":708,"line_end":708,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":89612,"byte_end":89620,"line_start":717,"line_end":717,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":90007,"byte_end":90015,"line_start":737,"line_end":737,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":90648,"byte_end":90653,"line_start":762,"line_end":762,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":91017,"byte_end":91022,"line_start":783,"line_end":783,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":91155,"byte_end":91160,"line_start":790,"line_end":790,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":92369,"byte_end":92381,"line_start":834,"line_end":834,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":92718,"byte_end":92730,"line_start":847,"line_end":847,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":93829,"byte_end":93838,"line_start":889,"line_end":889,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":95147,"byte_end":95164,"line_start":940,"line_end":940,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":95416,"byte_end":95433,"line_start":956,"line_end":956,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":95551,"byte_end":95568,"line_start":962,"line_end":962,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":98929,"byte_end":98936,"line_start":1077,"line_end":1077,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":100510,"byte_end":100520,"line_start":1133,"line_end":1133,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":101811,"byte_end":101820,"line_start":1184,"line_end":1184,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":102309,"byte_end":102318,"line_start":1206,"line_end":1206,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":103156,"byte_end":103162,"line_start":1238,"line_end":1238,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":104028,"byte_end":104034,"line_start":1274,"line_end":1274,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":104140,"byte_end":104146,"line_start":1280,"line_end":1280,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":111008,"byte_end":111020,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs","byte_start":120111,"byte_end":120121,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":120946,"byte_end":120958,"line_start":16,"line_end":16,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":121621,"byte_end":121633,"line_start":47,"line_end":47,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":123312,"byte_end":123322,"line_start":109,"line_end":109,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":124258,"byte_end":124268,"line_start":155,"line_end":155,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs","byte_start":128513,"byte_end":128523,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs","byte_start":129272,"byte_end":129278,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":131240,"byte_end":131241,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":131546,"byte_end":131556,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":131752,"byte_end":131762,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":132804,"byte_end":132814,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":139592,"byte_end":139602,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":141414,"byte_end":141421,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":142628,"byte_end":142634,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":143544,"byte_end":143549,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":143720,"byte_end":143725,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":145557,"byte_end":145567,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":146553,"byte_end":146559,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":147318,"byte_end":147323,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":147482,"byte_end":147487,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs","byte_start":148585,"byte_end":148596,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":149935,"byte_end":149943,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":150839,"byte_end":150847,"line_start":64,"line_end":64,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":152501,"byte_end":152507,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":153430,"byte_end":153436,"line_start":153,"line_end":153,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":153605,"byte_end":153611,"line_start":162,"line_end":162,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":154714,"byte_end":154722,"line_start":204,"line_end":204,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":155639,"byte_end":155647,"line_start":230,"line_end":230,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs","byte_start":157503,"byte_end":157514,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs","byte_start":157739,"byte_end":157750,"line_start":43,"line_end":43,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs","byte_start":159623,"byte_end":159635,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":163666,"byte_end":163675,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":163828,"byte_end":163837,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":164481,"byte_end":164490,"line_start":61,"line_end":61,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":164957,"byte_end":164966,"line_start":80,"line_end":80,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":165390,"byte_end":165399,"line_start":100,"line_end":100,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs","byte_start":166224,"byte_end":166232,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs","byte_start":166995,"byte_end":167003,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs","byte_start":167460,"byte_end":167468,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":168364,"byte_end":168372,"line_start":23,"line_end":23,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":168692,"byte_end":168699,"line_start":38,"line_end":38,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":169116,"byte_end":169124,"line_start":57,"line_end":57,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":170079,"byte_end":170095,"line_start":97,"line_end":97,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs","byte_start":172376,"byte_end":172390,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs","byte_start":175116,"byte_end":175124,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs","byte_start":175626,"byte_end":175634,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs","byte_start":177650,"byte_end":177656,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs","byte_start":177791,"byte_end":177797,"line_start":60,"line_end":60,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs","byte_start":178356,"byte_end":178362,"line_start":79,"line_end":79,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs","byte_start":179337,"byte_end":179344,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs","byte_start":179734,"byte_end":179741,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs","byte_start":179891,"byte_end":179898,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":182796,"byte_end":182806,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":183580,"byte_end":183590,"line_start":45,"line_end":45,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":185259,"byte_end":185265,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":185652,"byte_end":185658,"line_start":121,"line_end":121,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":186347,"byte_end":186354,"line_start":150,"line_end":150,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":186457,"byte_end":186464,"line_start":156,"line_end":156,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs","byte_start":188178,"byte_end":188181,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs","byte_start":189278,"byte_end":189281,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":189706,"byte_end":189717,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":189890,"byte_end":189901,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":190567,"byte_end":190578,"line_start":56,"line_end":56,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":191227,"byte_end":191233,"line_start":84,"line_end":84,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":191445,"byte_end":191451,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193058,"byte_end":193070,"line_start":153,"line_end":153,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":196874,"byte_end":196882,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":197680,"byte_end":197688,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":198405,"byte_end":198411,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":199438,"byte_end":199444,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":200976,"byte_end":200984,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":201263,"byte_end":201275,"line_start":54,"line_end":54,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":202511,"byte_end":202523,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs","byte_start":203441,"byte_end":203446,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs","byte_start":204024,"byte_end":204029,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs","byte_start":204951,"byte_end":204961,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs","byte_start":205583,"byte_end":205593,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs","byte_start":206414,"byte_end":206424,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":66538,"byte_end":66539,"line_start":1988,"line_end":1988,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":70058,"byte_end":70067,"line_start":2106,"line_end":2106,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":3396,"byte_end":3400,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":468}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs","byte_start":105877,"byte_end":105889,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs","byte_start":107995,"byte_end":108011,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/multi_product.rs","byte_start":108659,"byte_end":108671,"line_start":146,"line_end":146,"column_start":22,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1411},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":72551,"byte_end":72561,"line_start":64,"line_end":64,"column_start":25,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":73972,"byte_end":73990,"line_start":120,"line_end":120,"column_start":25,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1450},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76240,"byte_end":76247,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":76866,"byte_end":76873,"line_start":230,"line_end":230,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":78720,"byte_end":78727,"line_start":303,"line_end":303,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1474},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":81160,"byte_end":81168,"line_start":378,"line_end":378,"column_start":27,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1489},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":81396,"byte_end":81404,"line_start":387,"line_end":387,"column_start":28,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1489},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":82444,"byte_end":82448,"line_start":431,"line_end":431,"column_start":22,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1499},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":83046,"byte_end":83050,"line_start":458,"line_end":458,"column_start":31,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1499},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":83266,"byte_end":83275,"line_start":473,"line_end":473,"column_start":22,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":209},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":83507,"byte_end":83516,"line_start":484,"line_end":484,"column_start":12,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":85019,"byte_end":85024,"line_start":534,"line_end":534,"column_start":22,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":85261,"byte_end":85266,"line_start":545,"line_end":545,"column_start":27,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":86072,"byte_end":86077,"line_start":577,"line_end":577,"column_start":25,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":86915,"byte_end":86922,"line_start":608,"line_end":608,"column_start":30,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":87447,"byte_end":87454,"line_start":630,"line_end":630,"column_start":25,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":87722,"byte_end":87729,"line_start":642,"line_end":642,"column_start":28,"column_end":35},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":88189,"byte_end":88201,"line_start":666,"line_end":666,"column_start":9,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":89435,"byte_end":89443,"line_start":708,"line_end":708,"column_start":36,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":277},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":89612,"byte_end":89620,"line_start":717,"line_end":717,"column_start":27,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":277},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":90007,"byte_end":90015,"line_start":737,"line_end":737,"column_start":25,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":277},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":90648,"byte_end":90653,"line_start":762,"line_end":762,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":91017,"byte_end":91022,"line_start":783,"line_end":783,"column_start":24,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":91155,"byte_end":91160,"line_start":790,"line_end":790,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":92369,"byte_end":92381,"line_start":834,"line_end":834,"column_start":31,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":92718,"byte_end":92730,"line_start":847,"line_end":847,"column_start":29,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":93829,"byte_end":93838,"line_start":889,"line_end":889,"column_start":25,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1524},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":94708,"byte_end":94713,"line_start":923,"line_end":923,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1537},"to":{"krate":0,"index":346}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":95147,"byte_end":95164,"line_start":940,"line_end":940,"column_start":25,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1533},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":95416,"byte_end":95433,"line_start":956,"line_end":956,"column_start":21,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1543},"to":{"krate":2,"index":2220}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":95551,"byte_end":95568,"line_start":962,"line_end":962,"column_start":32,"column_end":49},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1543},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":98929,"byte_end":98936,"line_start":1077,"line_end":1077,"column_start":25,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":100510,"byte_end":100520,"line_start":1133,"line_end":1133,"column_start":34,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":101811,"byte_end":101820,"line_start":1184,"line_end":1184,"column_start":25,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":409},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":102309,"byte_end":102318,"line_start":1206,"line_end":1206,"column_start":36,"column_end":45},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":409},"to":{"krate":2,"index":3842}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":103156,"byte_end":103162,"line_start":1238,"line_end":1238,"column_start":25,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":104028,"byte_end":104034,"line_start":1274,"line_end":1274,"column_start":34,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/adaptors/mod.rs","byte_start":104140,"byte_end":104146,"line_start":1280,"line_end":1280,"column_start":36,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":428},"to":{"krate":2,"index":3842}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/either_or_both.rs","byte_start":111008,"byte_end":111020,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/cons_tuples_impl.rs","byte_start":120111,"byte_end":120121,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1823},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":120946,"byte_end":120958,"line_start":16,"line_end":16,"column_start":24,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":121621,"byte_end":121633,"line_start":47,"line_end":47,"column_start":22,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":535},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":123312,"byte_end":123322,"line_start":109,"line_end":109,"column_start":9,"column_end":19},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/combinations.rs","byte_start":124258,"byte_end":124268,"line_start":155,"line_end":155,"column_start":26,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1832},"to":{"krate":2,"index":1779}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs","byte_start":128513,"byte_end":128523,"line_start":49,"line_end":49,"column_start":33,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":7564}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/format.rs","byte_start":129272,"byte_end":129278,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":131240,"byte_end":131241,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":632},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":131546,"byte_end":131556,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":131752,"byte_end":131762,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":132804,"byte_end":132814,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":139592,"byte_end":139602,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":141414,"byte_end":141421,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":142628,"byte_end":142634,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":143544,"byte_end":143549,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":714},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":143720,"byte_end":143725,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":714},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":145557,"byte_end":145567,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":146553,"byte_end":146559,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":751},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":147318,"byte_end":147323,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":761},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/groupbylazy.rs","byte_start":147482,"byte_end":147487,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":761},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/intersperse.rs","byte_start":148585,"byte_end":148596,"line_start":35,"line_end":35,"column_start":22,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1893},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":149935,"byte_end":149943,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":150839,"byte_end":150847,"line_start":64,"line_end":64,"column_start":19,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1904},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":152501,"byte_end":152507,"line_start":121,"line_end":121,"column_start":24,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":807},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":153430,"byte_end":153436,"line_start":153,"line_end":153,"column_start":19,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":807},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":153605,"byte_end":153611,"line_start":162,"line_end":162,"column_start":22,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":807},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":154714,"byte_end":154722,"line_start":204,"line_end":204,"column_start":27,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/kmerge_impl.rs","byte_start":155639,"byte_end":155647,"line_start":230,"line_end":230,"column_start":25,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":826},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs","byte_start":157503,"byte_end":157514,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/merge_join.rs","byte_start":157739,"byte_end":157750,"line_start":43,"line_end":43,"column_start":28,"column_end":39},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":859},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/minmax.rs","byte_start":159623,"byte_end":159635,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":163666,"byte_end":163675,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":163828,"byte_end":163837,"line_start":39,"line_end":39,"column_start":19,"column_end":28},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":164481,"byte_end":164490,"line_start":61,"line_end":61,"column_start":25,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1939},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":164957,"byte_end":164966,"line_start":80,"line_end":80,"column_start":22,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1939},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/multipeek_impl.rs","byte_start":165390,"byte_end":165399,"line_start":100,"line_end":100,"column_start":31,"column_end":40},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1939},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs","byte_start":166224,"byte_end":166232,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs","byte_start":166995,"byte_end":167003,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":3842}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/pad_tail.rs","byte_start":167460,"byte_end":167468,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":168050,"byte_end":168058,"line_start":15,"line_end":15,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3585},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":168364,"byte_end":168372,"line_start":23,"line_end":23,"column_start":25,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":2,"index":29136},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":168692,"byte_end":168699,"line_start":38,"line_end":38,"column_start":25,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1464},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":169116,"byte_end":169124,"line_start":57,"line_end":57,"column_start":25,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2017},"to":{"krate":0,"index":933}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/peeking_take_while.rs","byte_start":170079,"byte_end":170095,"line_start":97,"line_end":97,"column_start":29,"column_end":45},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":948},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/process_results_impl.rs","byte_start":172376,"byte_end":172390,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2006},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs","byte_start":175116,"byte_end":175124,"line_start":26,"line_end":26,"column_start":19,"column_end":27},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/put_back_n_impl.rs","byte_start":175626,"byte_end":175634,"line_start":47,"line_end":47,"column_start":32,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2017},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs","byte_start":177650,"byte_end":177656,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2027},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs","byte_start":177791,"byte_end":177797,"line_start":60,"line_end":60,"column_start":25,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2027},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/rciter_impl.rs","byte_start":178356,"byte_end":178362,"line_start":79,"line_end":79,"column_start":33,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2027},"to":{"krate":2,"index":3842}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs","byte_start":179337,"byte_end":179344,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2033},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs","byte_start":179734,"byte_end":179741,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2033},"to":{"krate":2,"index":3842}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/repeatn.rs","byte_start":179891,"byte_end":179898,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2033},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":182796,"byte_end":182806,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":183580,"byte_end":183590,"line_start":45,"line_end":45,"column_start":25,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1047},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":185259,"byte_end":185265,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2042},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":185652,"byte_end":185658,"line_start":121,"line_end":121,"column_start":29,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2042},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":186347,"byte_end":186354,"line_start":150,"line_end":150,"column_start":28,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2051},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/sources.rs","byte_start":186457,"byte_end":186464,"line_start":156,"line_end":156,"column_start":26,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2051},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs","byte_start":188178,"byte_end":188181,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tee.rs","byte_start":189278,"byte_end":189281,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2071},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":189706,"byte_end":189717,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":189890,"byte_end":189901,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":190567,"byte_end":190578,"line_start":56,"line_end":56,"column_start":31,"column_end":42},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":191227,"byte_end":191233,"line_start":84,"line_end":84,"column_start":25,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1114},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":191445,"byte_end":191451,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193058,"byte_end":193070,"line_start":153,"line_end":153,"column_start":25,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2085},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/tuple_impl.rs","byte_start":193596,"byte_end":193601,"line_start":174,"line_end":174,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1537},"to":{"krate":0,"index":1140}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":196874,"byte_end":196882,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2142},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":197680,"byte_end":197688,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2142},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":198405,"byte_end":198411,"line_start":79,"line_end":79,"column_start":22,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2155},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/unique_impl.rs","byte_start":199438,"byte_end":199444,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2155},"to":{"krate":2,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":200976,"byte_end":200984,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":201263,"byte_end":201275,"line_start":54,"line_end":54,"column_start":32,"column_end":44},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1191},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/with_position.rs","byte_start":202511,"byte_end":202523,"line_start":88,"line_end":88,"column_start":31,"column_end":43},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1191},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs","byte_start":203441,"byte_end":203446,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2190},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_eq_impl.rs","byte_start":204024,"byte_end":204029,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2190},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs","byte_start":204951,"byte_end":204961,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":3585}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs","byte_start":205583,"byte_end":205593,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":3842}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/zip_longest.rs","byte_start":206414,"byte_end":206424,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":3871}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":8117,"byte_end":8125,"line_start":283,"line_end":283,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3585},"to":{"krate":0,"index":1253}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":66538,"byte_end":66539,"line_start":1988,"line_end":1988,"column_start":31,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1395},"to":{"krate":0,"index":1253}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.7.11/src/lib.rs","byte_start":70058,"byte_end":70067,"line_start":2106,"line_end":2106,"column_start":9,"column_end":18},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2389},"to":{"krate":4294967295,"index":4294967295}}]}