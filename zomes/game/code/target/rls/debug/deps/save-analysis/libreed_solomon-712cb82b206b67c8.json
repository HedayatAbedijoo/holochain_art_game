{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1","program":"/home/hedayat/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","reed_solomon","/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=712cb82b206b67c8","-C","extra-filename=-712cb82b206b67c8","--out-dir","/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps","-L","dependency=/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/hedayat/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/hedayat/holo/tutorial/art_game/zomes/game/code/target/rls/debug/deps/libreed_solomon-712cb82b206b67c8.rmeta"},"prelude":{"crate_id":{"name":"reed_solomon","disambiguator":[7234499775859386754,6967554174665391419]},"crate_root":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src","external_crates":[{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16029480004387217627,6286701584104388484]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11090620017897417446,12697652474452346877]}},{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266695456344252550,6880608577203890473]}}],"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","byte_start":0,"byte_end":6404,"line_start":1,"line_end":182,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","byte_start":6315,"byte_end":6322,"line_start":179,"line_end":179,"column_start":18,"column_end":25},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":149},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","byte_start":6341,"byte_end":6348,"line_start":180,"line_end":180,"column_start":18,"column_end":25},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","byte_start":6367,"byte_end":6379,"line_start":181,"line_end":181,"column_start":18,"column_end":30},"alias_span":null,"name":"DecoderError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","byte_start":6397,"byte_end":6403,"line_start":182,"line_end":182,"column_start":17,"column_end":23},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","byte_start":0,"byte_end":6404,"line_start":1,"line_end":182,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":9},{"krate":0,"index":76},{"krate":0,"index":85},{"krate":0,"index":109},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" Reed-Solomon BCH encoder and decoder suitable for `no_std` environment.","sig":null,"attributes":[{"value":"warn(missing_docs, missing_debug_implementations, trivial_casts,\n       trivial_numeric_casts, unstable_features)","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","byte_start":6043,"byte_end":6169,"line_start":164,"line_end":166,"column_start":1,"column_end":28}},{"value":"no_std","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/lib.rs","byte_start":6171,"byte_end":6181,"line_start":168,"line_end":168,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":131},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":19815,"byte_end":19822,"line_start":2,"line_end":2,"column_start":12,"column_end":19},"name":"Polynom","qualname":"::gf::poly::Polynom","value":"Polynom {  }","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":19946,"byte_end":19949,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<Polynom>::new","value":"fn () -> Polynom","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":19925,"byte_end":19934,"line_start":9,"line_end":9,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20123,"byte_end":20134,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"with_length","qualname":"<Polynom>::with_length","value":"fn (len: usize) -> Polynom","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20102,"byte_end":20111,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20262,"byte_end":20272,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"set_length","qualname":"<Polynom>::set_length","value":"fn (&mut self, new_len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20241,"byte_end":20250,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20697,"byte_end":20700,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"len","qualname":"<Polynom>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20676,"byte_end":20685,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20771,"byte_end":20778,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Polynom>::reverse","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20750,"byte_end":20759,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20871,"byte_end":20875,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"push","qualname":"<Polynom>::push","value":"fn (&mut self, x: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20850,"byte_end":20859,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":137},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/encoder.rs","byte_start":27980,"byte_end":27987,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":138}],"decl_id":null,"docs":" Reed-Solomon BCH encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/encoder.rs","byte_start":28270,"byte_end":28273,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"fn (ecc_len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Encoder` and calculates generator polynomial of given `ecc_len`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/encoder.rs","byte_start":28847,"byte_end":28853,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder>::encode","value":"fn (&self, data: &[u8]) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Encodes passed `&[u8]` slice and returns `Buffer` with result and `ecc` offset.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":142},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/decoder.rs","byte_start":31664,"byte_end":31677,"line_start":11,"line_end":11,"column_start":5,"column_end":18},"name":"TooManyErrors","qualname":"::decoder::DecoderError::TooManyErrors","value":"DecoderError::TooManyErrors","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Message is unrecoverably corrupted\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":141},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/decoder.rs","byte_start":31602,"byte_end":31614,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"DecoderError","qualname":"::decoder::DecoderError","value":"DecoderError::{TooManyErrors}","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" Decoder error\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/decoder.rs","byte_start":31809,"byte_end":31816,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":150}],"decl_id":null,"docs":" Reed-Solomon BCH decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/decoder.rs","byte_start":32040,"byte_end":32043,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"fn (ecc_len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Decoder`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/decoder.rs","byte_start":33025,"byte_end":33042,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"correct_err_count","qualname":"<Decoder>::correct_err_count","value":"fn (&self, msg: &[u8], erase_pos: Option<&[u8]>) -> Result<(Buffer, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Decodes block-encoded message and returns `Buffer` with corrected message and ecc offset.\n Also includes the number of errors corrected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/decoder.rs","byte_start":35326,"byte_end":35333,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"correct","qualname":"<Decoder>::correct","value":"fn (&self, msg: &[u8], erase_pos: Option<&[u8]>) -> Result<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Decodes block-encoded message and returns `Buffer` with corrected message and ecc offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/decoder.rs","byte_start":36132,"byte_end":36144,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"is_corrupted","qualname":"<Decoder>::is_corrupted","value":"fn (&self, msg: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs fast corruption check.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":46056,"byte_end":46062,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" Buffer for block encoded data\n # Example\n ```rust\n use reed_solomon::Buffer;","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":46177,"byte_end":46189,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"from_polynom","qualname":"<Buffer>::from_polynom","value":"fn (poly: Polynom, data_len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create buffer from internal polynom\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":46371,"byte_end":46381,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Buffer>::from_slice","value":"fn (slice: &[u8], data_len: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create buffer from [u8] slice\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":46581,"byte_end":46585,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"data","qualname":"<Buffer>::data","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Slice with data of encoded block\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":46711,"byte_end":46714,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"ecc","qualname":"<Buffer>::ecc","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Slice with error correction core of encoced block\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":46827,"byte_end":46833,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"append","qualname":"<Buffer>::append","value":"fn (&mut self, rhs: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add byte string to the end of buffer\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":19911,"byte_end":19918,"line_start":8,"line_end":8,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20983,"byte_end":20990,"line_start":59,"line_end":59,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21080,"byte_end":21087,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21183,"byte_end":21190,"line_start":73,"line_end":73,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21380,"byte_end":21387,"line_start":83,"line_end":83,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21554,"byte_end":21561,"line_start":91,"line_end":91,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21839,"byte_end":21846,"line_start":102,"line_end":102,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/encoder.rs","byte_start":28022,"byte_end":28029,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/decoder.rs","byte_start":31847,"byte_end":31854,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":46113,"byte_end":46119,"line_start":19,"line_end":19,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":47055,"byte_end":47061,"line_start":56,"line_end":56,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":47176,"byte_end":47182,"line_start":63,"line_end":63,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":47291,"byte_end":47297,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":19911,"byte_end":19918,"line_start":8,"line_end":8,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":20983,"byte_end":20990,"line_start":59,"line_end":59,"column_start":16,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":131},"to":{"krate":1,"index":2179}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21080,"byte_end":21087,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":131},"to":{"krate":1,"index":2204}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21183,"byte_end":21190,"line_start":73,"line_end":73,"column_start":16,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":131},"to":{"krate":1,"index":1703}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21380,"byte_end":21387,"line_start":83,"line_end":83,"column_start":19,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":131},"to":{"krate":1,"index":1714}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21554,"byte_end":21561,"line_start":91,"line_end":91,"column_start":29,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":131},"to":{"krate":1,"index":2220}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/gf/poly.rs","byte_start":21839,"byte_end":21846,"line_start":102,"line_end":102,"column_start":21,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":131},"to":{"krate":1,"index":7559}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/encoder.rs","byte_start":28022,"byte_end":28029,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/decoder.rs","byte_start":31847,"byte_end":31854,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":46113,"byte_end":46119,"line_start":19,"line_end":19,"column_start":6,"column_end":12},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":47055,"byte_end":47061,"line_start":56,"line_end":56,"column_start":16,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":156},"to":{"krate":1,"index":1703}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":47176,"byte_end":47182,"line_start":63,"line_end":63,"column_start":19,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":156},"to":{"krate":1,"index":1714}},{"span":{"file_name":"/home/hedayat/.cargo/registry/src/github.com-1ecc6299db9ec823/reed-solomon-0.2.1/src/buffer.rs","byte_start":47291,"byte_end":47297,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":156},"to":{"krate":1,"index":2220}}]}